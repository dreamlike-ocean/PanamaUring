// Generated by jextract

package top.dreamlike.nativeLib.stdio;

import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.OfInt;

class constants$12 {

    static final FunctionDescriptor ferror$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
            Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ferror$MH = RuntimeHelper.downcallHandle(
            "ferror",
            constants$12.ferror$FUNC
    );
    static final FunctionDescriptor clearerr_unlocked$FUNC = FunctionDescriptor.ofVoid(
            Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle clearerr_unlocked$MH = RuntimeHelper.downcallHandle(
            "clearerr_unlocked",
            constants$12.clearerr_unlocked$FUNC
    );
    static final FunctionDescriptor feof_unlocked$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
            Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle feof_unlocked$MH = RuntimeHelper.downcallHandle(
            "feof_unlocked",
            constants$12.feof_unlocked$FUNC
    );
    static final FunctionDescriptor ferror_unlocked$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
            Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ferror_unlocked$MH = RuntimeHelper.downcallHandle(
            "ferror_unlocked",
            constants$12.ferror_unlocked$FUNC
    );
    static final FunctionDescriptor perror$FUNC = FunctionDescriptor.ofVoid(
            Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle perror$MH = RuntimeHelper.downcallHandle(
            "perror",
            constants$12.perror$FUNC
    );
    static final OfInt sys_nerr$LAYOUT = Constants$root.C_INT$LAYOUT;
    static final VarHandle sys_nerr$VH = constants$12.sys_nerr$LAYOUT.varHandle();
    static final MemorySegment sys_nerr$SEGMENT = RuntimeHelper.lookupGlobalVariable("sys_nerr", constants$12.sys_nerr$LAYOUT);
}


